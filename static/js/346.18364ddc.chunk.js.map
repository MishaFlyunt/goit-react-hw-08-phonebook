{"version":3,"file":"static/js/346.18364ddc.chunk.js","mappings":"oPAEaA,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAU,EAIlDC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EAErCC,GAAwBC,EAAAA,EAAAA,IACnC,CAL4B,SAAAN,GAAK,OAAIA,EAAMC,SAASM,KAAM,EAKzCJ,IACjB,SAACF,EAAUG,GAET,OADAI,QAAQC,IAAI,6BACLR,EAASG,QAAO,SAAAM,GAAO,OAAAA,EAAJC,KACnBC,cAAcC,OAAOC,SAASV,EAAOQ,cAAc,GAE5D,I,mBCbWG,EAAoBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+BAI7BC,EAAoBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kEAM7BG,EAAeL,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kC,SCE5BK,EAAc,WACzB,IAAMtB,GAAWuB,EAAAA,EAAAA,IAAYnB,GAEvBoB,GAAWC,EAAAA,EAAAA,MAQjB,OANAlB,QAAQC,IAAIR,IAOV0B,EAAAA,EAAAA,KAACZ,EAAiB,CAAAa,SACf3B,EAAS4B,KAAI,SAAAnB,GAAA,IAAGoB,EAAEpB,EAAFoB,GAAInB,EAAID,EAAJC,KAAMoB,EAAMrB,EAANqB,OAAM,OAC/BC,EAAAA,EAAAA,MAACb,EAAiB,CAAAS,SAAA,EAChBI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CACGjB,EAAK,KAAGoB,MAEXJ,EAAAA,EAAAA,KAACN,EAAY,CACXY,KAAK,SACLC,QAAS,WACPT,GAASU,EAAAA,EAAAA,IAAcL,GACzB,EAAEF,SACH,aATqBE,EAYJ,KAI5B,EC1CaM,EAAcpB,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAM1BmB,EAAerB,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mC,UCFzBoB,EAAS,WACpB,IAAMlC,GAASoB,EAAAA,EAAAA,IAAYrB,GACrBsB,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACU,EAAY,CAAAT,UACXI,EAAAA,EAAAA,MAACI,EAAW,CAAAR,SAAA,EACVD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,2BACJD,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLtB,KAAK,SACL4B,MAAOnC,EACPoC,SAAU,SAAAC,GACRhB,GAASiB,EAAAA,EAAAA,GAAcD,EAAEE,OAAOJ,MAAM3B,cAAcC,QACtD,QAKV,ECjBe,SAAS+B,IACtB,IAAMnB,GAAWC,EAAAA,EAAAA,MACXxB,GAAYsB,EAAAA,EAAAA,IAAYzB,GAM9B,OAJA8C,EAAAA,EAAAA,YAAU,WACRpB,GAASqB,EAAAA,EAAAA,MACX,GAAG,CAACrB,KAGFO,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAAnB,SAAA,EACED,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAAApB,UACLD,EAAAA,EAAAA,KAAA,SAAAC,SAAO,qBAETD,EAAAA,EAAAA,KAAA,OAAAC,SAAM1B,GAAa,4BACnByB,EAAAA,EAAAA,KAACW,EAAM,KACPX,EAAAA,EAAAA,KAACJ,EAAW,MAGlB,C","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    console.log('Calculating visible tasks');\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().trim().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\n  margin-top: 15px;\n`;\n\nexport const ContactItemStyled = styled.li`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n\nexport const ButtonStyled = styled.button`\n  border-radius: 15px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  // selectContacts,\n  // selectFilter,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\nimport {\n  ContactListStyled,\n  ContactItemStyled,\n  ButtonStyled,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  // const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  console.log(contacts);\n  // console.log(selectVisibleContacts);\n  // const getContacts = contacts.filter(({ name }) =>\n  //   name.toLowerCase().trim().includes(filter.toLowerCase())\n  // );\n\n  return (\n    <ContactListStyled>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItemStyled key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <ButtonStyled\n            type=\"button\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete\n          </ButtonStyled>\n        </ContactItemStyled>\n      ))}\n    </ContactListStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const FilterStyled = styled.div`\n  padding: 10px 0 15px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { LabelStyled, FilterStyled } from './Filter.styled';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { filterContact } from '../../redux/contacts/filtersSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FilterStyled>\n      <LabelStyled>\n        <h3>Find contacts by name</h3>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={e => {\n            dispatch(filterContact(e.target.value.toLowerCase().trim()));\n          }}\n        />\n      </LabelStyled>\n    </FilterStyled>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContact } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","isLoading","selectFilter","filter","selectVisibleContacts","createSelector","items","console","log","_ref","name","toLowerCase","trim","includes","ContactListStyled","styled","_templateObject","_taggedTemplateLiteral","ContactItemStyled","_templateObject2","ButtonStyled","_templateObject3","ContactList","useSelector","dispatch","useDispatch","_jsx","children","map","id","number","_jsxs","type","onClick","deleteContact","LabelStyled","FilterStyled","Filter","value","onChange","e","filterContact","target","Contacts","useEffect","fetchContact","_Fragment","Helmet"],"sourceRoot":""}