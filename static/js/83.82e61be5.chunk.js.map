{"version":3,"file":"static/js/83.82e61be5.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/ContactForm/Form.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    console.log('Calculating visible tasks');\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().trim().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\n  margin-top: 15px;\n`;\n\nexport const ContactItemStyled = styled.li`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 15px;\n`;\n\nexport const ButtonStyled = styled.button`\n  border-radius: 15px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  // selectContacts,\n  // selectFilter,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\nimport {\n  ContactListStyled,\n  ContactItemStyled,\n  ButtonStyled,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  // const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  console.log(contacts);\n  // console.log(selectVisibleContacts);\n  // const getContacts = contacts.filter(({ name }) =>\n  //   name.toLowerCase().trim().includes(filter.toLowerCase())\n  // );\n\n  return (\n    <ContactListStyled>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItemStyled key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <ButtonStyled\n            type=\"button\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete\n          </ButtonStyled>\n        </ContactItemStyled>\n      ))}\n    </ContactListStyled>\n  );\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  /* flex-direction: column;\n  justify-content: center; */\n  gap: 10px;\n  padding: 5px 0 18px;\n`;\n\nexport const LabelStylet = styled.label`\n  /* display: flex; */\n`;\n\nexport const FieldStyled = styled(Field)`\n  width: 150px;\n`;\n\nexport const ButtonForm = styled.button`\n  width: 100px;\n  padding: 8px;\n  border-radius: 15px;\n  margin: 0 auto;\n`;\n\nexport const ErrorMess = styled(ErrorMessage)`\n  width: 200px;\n  color: red;\n  font-size: 10px;\n`;\n","// import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport toast from 'react-hot-toast';\n\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport {\n  FormStyled,\n  LabelStylet,\n  FieldStyled,\n  ButtonForm,\n  ErrorMess,\n} from './Form.styled';\nimport * as Yup from 'yup';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(\n      1,\n      'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d Artagnan'\n    )\n    .required('Please enter a name'),\n  number: Yup.string()\n    .min(\n      7,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Please enter the number'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  // console.log(contacts);\n  const handleSubmit = (values, actions) => {\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase().trim() ===\n            values.name.toLowerCase().trim() ||\n          contact.number.trim() === values.number.trim()\n      )\n    ) {\n      return toast.error('A contact with that name or number already exists');\n    }\n    dispatch(addContact({ ...values }));\n    actions.resetForm();\n    toast.success('Contact added successfully', {\n      duration: 3000,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <FormStyled>\n        <LabelStylet>\n          <p>Name</p>\n          <FieldStyled type=\"text\" name=\"name\" />\n          <ErrorMess name=\"name\" component=\"div\" />\n        </LabelStylet>\n\n        <LabelStylet>\n          <p>Number</p>\n          <FieldStyled type=\"tel\" name=\"number\" />\n          <ErrorMess name=\"number\" component=\"div\" />\n        </LabelStylet>\n\n        <ButtonForm type=\"submit\">Add contact</ButtonForm>\n      </FormStyled>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const FilterStyled = styled.div`\n  padding: 10px 0 15px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { LabelStyled, FilterStyled } from './Filter.styled';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { filterContact } from '../../redux/contacts/filtersSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FilterStyled>\n      <LabelStyled>\n        <h3>Find contacts by name</h3>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={e => {\n            dispatch(filterContact(e.target.value.toLowerCase().trim()));\n          }}\n        />\n      </LabelStyled>\n    </FilterStyled>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContact } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","isLoading","selectContacts","items","selectFilter","filter","selectVisibleContacts","createSelector","console","log","_ref","name","toLowerCase","trim","includes","ContactListStyled","styled","_templateObject","_taggedTemplateLiteral","ContactItemStyled","_templateObject2","ButtonStyled","_templateObject3","ContactList","useSelector","dispatch","useDispatch","_jsx","children","map","id","number","_jsxs","type","onClick","deleteContact","FormStyled","Form","LabelStylet","FieldStyled","Field","ButtonForm","_templateObject4","ErrorMess","ErrorMessage","_templateObject5","schema","Yup","shape","min","required","ContactForm","Formik","initialValues","onSubmit","values","actions","find","contact","toast","addContact","_objectSpread","resetForm","duration","validationSchema","component","LabelStyled","FilterStyled","Filter","value","onChange","e","filterContact","target","Contacts","useEffect","fetchContact","_Fragment","Helmet"],"sourceRoot":""}